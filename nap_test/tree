(function_definition func sieve ( (arg_list (typeIdentifier array< (typeIdentifier bool) >) candidates) ) (block { (instruction (expr candidates) [ (expr 0) ] = (expr F)) (instruction (expr candidates) [ (expr 1) ] = (expr F)) (instruction var (typeIdentifier int) counter = (instruction (expr 2))) (instruction (conditional while ( (expr (expr counter) < (expr length ( (expr candidates) ))) ) (block { (instruction (conditional if ( (instruction (expr (expr candidates) [ (expr counter) ])) ) (block { (instruction (expr set ( (expr candidates) , (expr (expr 2) * (expr counter)) , (expr counter) , (expr F) ))) }))) (instruction counter += (expr 1)) }))) }))
